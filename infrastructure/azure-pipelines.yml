
trigger:
  branches:
    include:
    - main

variables:
  pythonVersion: '3.12'
  workingDirectory: 'services/user-service'

stages:
# STAGE 1: BUILD
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Python Application'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    - script: |
        echo "Building Car Rental System..."
        python -m pip install --upgrade pip
        cd services/user-service
        pip install -r requirements.txt
        echo "Build completed successfully!"
      displayName: 'Install dependencies and build'
    - script: |
        echo "Creating deployment package..."
        mkdir -p $(Build.ArtifactStagingDirectory)/app
        cp -r services/ $(Build.ArtifactStagingDirectory)/app/
        cp -r docs/ $(Build.ArtifactStagingDirectory)/app/
        echo "Package created successfully!"
      displayName: 'Create deployment package'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'car-rental-app'
        publishLocation: 'Container'

# STAGE 2: TEST
- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: TestJob
    displayName: 'Run Tests'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    - script: |
        echo "Installing test dependencies..."
        python -m pip install --upgrade pip
        cd services/user-service
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
      displayName: 'Install dependencies'
    - script: |
        echo "Running health check tests..."
        cd services/user-service
        python -c "
        import sys
        sys.path.append('.')
        from app import app
        from fastapi.testclient import TestClient
        
        client = TestClient(app)
        
        # Test health endpoint
        response = client.get('/health')
        assert response.status_code == 200
        assert response.json()['status'] == 'healthy'
        print('✓ Health endpoint test passed')
        
        # Test ping endpoint  
        response = client.get('/ping')
        assert response.status_code == 200
        assert response.json()['message'] == 'pong'
        print('✓ Ping endpoint test passed')
        
        # Test metrics endpoint
        response = client.get('/metrics')
        assert response.status_code == 200
        assert 'service' in response.json()
        print('✓ Metrics endpoint test passed')
        
        print('All tests passed successfully!')
        "
      displayName: 'Run application tests'

# STAGE 3: DEPLOY
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    displayName: 'Deploy to Azure'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "=== DEPLOYMENT SIMULATION ==="
              echo "Downloading artifacts..."
              echo "✓ Artifacts downloaded"
              echo ""
              echo "Deploying to Azure App Service: car-rental-api"
              echo "✓ Application deployed"
              echo ""
              echo "Configuration applied:"
              echo "  - Runtime: Python 3.12"
              echo "  - App Service: car-rental-api.azurewebsites.net"
              echo "  - Health check: Enabled"
              echo ""
              echo "=== DEPLOYMENT COMPLETED SUCCESSFULLY ==="
            displayName: 'Deploy to Azure App Service (Simulated)'
          - script: |
              echo "=== POST-DEPLOYMENT VERIFICATION ==="
              echo "Verifying deployment..."
              echo "✓ Service is responsive"
              echo "✓ Health checks passing"
              echo "✓ All endpoints available"
              echo ""
              echo "Application URLs:"
              echo "  - Health: https://car-rental-api.azurewebsites.net/health"
              echo "  - Ping: https://car-rental-api.azurewebsites.net/ping"
              echo "  - Metrics: https://car-rental-api.azurewebsites.net/metrics"
              echo ""
              echo "=== VERIFICATION COMPLETED ==="
            displayName: 'Verify deployment'